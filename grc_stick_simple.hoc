
// Detailed model of Cerebellar Granular Cell model
// Multicompartmental model - cell template 
// Last updated 07-Jan-2009
// Model developer: Shyam Diwakar M.
// Developed at Egidio D'Angelo's Lab at Univ of Pavia
// Code contributors: Thierry Nieus, Sergio Solinas 
// Dept. of Gen. Physiology (Univ. of Pavia, Italy)
// School of biotech (Amrita University, India) 
// Email:shyam@unipv.it

/* Based on:
 Model published as [Diwakar et al, J.Neurophysiology] 
 Shyam Diwakar, Jacopo Magistretti, Mitchell Goldfarb, Giovanni Naldi, and Egidio D'Angelo.
 Axonal Na+ channels ensure fast spike activation and back-propagation in cerebellar granule cells, J Neurophysiol (December 10, 2008). 
 doi:10.1152/jn.90382.2008
 */ 
 
/* modified to just provide the cell structure directly, and NOT be a template.
Points for the cell were generated by grc_points.py
The instertion of channels and generation of multiple cells is handled in cnmodel
*/

objref soma
soma = new SectionList()
objref hillock
hillock = new SectionList()
objref axon
axon = new SectionList()

objref primarydendrite
primarydendrite = new SectionList()
objref preclaw
preclaw = new SectionList()
objref dendriticclaw
dendriticclaw = new SectionList()

ndend=4
nsg=5
nbut=20
naxon=30
create sections[10]

// PBM Modified Auto-generated code for GRC cell
access sections[0]
soma.append()
sections[0] {
    pt3dadd(0, 0, 0.00, 5.8)
    pt3dadd(0, 0, -5.80, 5.8)
}

access sections[1]
hillock.append()
sections[1] {
    pt3dadd(0, 0, -5.80, 2.30)
    pt3dadd(0, 0, -6.30, 2.30)
}

connect sections[1](0), sections[0](1)
access sections[2]
hillock.append()
sections[2] {
    pt3dadd(0, 0, -6.30, 1.80)
    pt3dadd(0, 0, -6.80, 1.80)
}

connect sections[2](0), sections[1](1)
access sections[3]
hillock.append()
sections[3] {
    pt3dadd(0, 0, -6.80, 1.30)
    pt3dadd(0, 0, -7.30, 1.30)
}

connect sections[3](0), sections[2](1)
access sections[4]
hillock.append()
sections[4] {
    pt3dadd(0, 0, -7.30, 0.80)
    pt3dadd(0, 0, -7.80, 0.80)
}

connect sections[4](0), sections[3](1)
access sections[5]
hillock.append()
sections[5] {
    pt3dadd(0, 0, -7.80, 0.30)
    pt3dadd(0, 0, -8.30, 0.30)
}

connect sections[5](0), sections[4](1)
// Axon
access sections[6]
axon.append()
sections[6] {
    pt3dadd(0, 0, -8.30, 0.30)
    pt3dadd(0, 0, -10.64, 0.30)
    pt3dadd(0, 0, -12.97, 0.30)
    pt3dadd(0, 0, -15.31, 0.30)
    pt3dadd(0, 0, -17.65, 0.30)
    pt3dadd(0, 0, -19.98, 0.30)
    pt3dadd(0, 0, -22.32, 0.30)
    pt3dadd(0, 0, -24.66, 0.30)
    pt3dadd(0, 0, -26.99, 0.30)
    pt3dadd(0, 0, -29.33, 0.30)
    pt3dadd(0, 0, -31.67, 0.30)
    pt3dadd(0, 0, -34.00, 0.30)
    pt3dadd(0, 0, -36.34, 0.30)
    pt3dadd(0, 0, -38.68, 0.30)
    pt3dadd(0, 0, -41.01, 0.30)
    pt3dadd(0, 0, -43.35, 0.30)
    pt3dadd(0, 0, -45.69, 0.30)
    pt3dadd(0, 0, -48.02, 0.30)
    pt3dadd(0, 0, -50.36, 0.30)
    pt3dadd(0, 0, -52.70, 0.30)
    pt3dadd(0, 0, -55.03, 0.30)
    pt3dadd(0, 0, -57.37, 0.30)
    pt3dadd(0, 0, -59.71, 0.30)
    pt3dadd(0, 0, -62.04, 0.30)
    pt3dadd(0, 0, -64.38, 0.30)
    pt3dadd(0, 0, -66.72, 0.30)
    pt3dadd(0, 0, -69.05, 0.30)
    pt3dadd(0, 0, -71.39, 0.30)
    pt3dadd(0, 0, -73.73, 0.30)
    pt3dadd(0, 0, -76.06, 0.30)
}

connect sections[6](0), sections[5](1)
// Dendrites

// Dendrite 1
access sections[7]
primarydendrite.append()
sections[7] {
    pt3dadd(0.00, 0.00, 0.00, 0.75)
    pt3dadd(0.00, 5.00, 0.00, 0.75)
}

connect sections[7](0), sections[0](0)
access sections[8]
primarydendrite.append()
sections[8] {
    pt3dadd(0.00, 5.00, 0.00, 0.75)
    pt3dadd(0.00, 10.00, 0.00, 0.75)
}

connect sections[8](0), sections[7](0)

// End of cell
